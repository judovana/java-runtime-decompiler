<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>java-runtime-decompiler</artifactId>
        <groupId>java-runtime-decompiler</groupId>
        <version>9.2</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>runtime-decompiler</artifactId>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jrd.root.directory>${project.parent.basedir}</jrd.root.directory>
        <jrd.client.main.class>org.jrd.backend.data.Main</jrd.client.main.class>
        <jrd.jdk.version>11</jrd.jdk.version>
        <jrd.jdk.arg1>--add-modules</jrd.jdk.arg1>
        <jrd.jdk.arg2>jdk.jdeps,jdk.attach,jdk.hotspot.agent</jrd.jdk.arg2>
        <jrd.jdk.arg3>--add-exports</jrd.jdk.arg3>
        <jrd.jdk.arg4>jdk.jdeps/com.sun.tools.javap=ALL-UNNAMED</jrd.jdk.arg4>
        <timestamp>${maven.build.timestamp}</timestamp>
        <maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
        <cplc.version>2.3-SNAPSHOT</cplc.version>
        <btm.version>4.0.25</btm.version>
        <jupiter.version>5.13.4</jupiter.version>
    </properties>
    <repositories>
      <repository>
        <id>jcenter</id>
        <name>jcenter</name>
        <url>https://jcenter.bintray.com</url>
      </repository>
    </repositories>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${jrd.jdk.version}</source>
                    <target>${jrd.jdk.version}</target>
                    <compilerArgs>
                        <arg>${jrd.jdk.arg1}</arg>
                        <arg>${jrd.jdk.arg2}</arg>
                        <arg>${jrd.jdk.arg3}</arg>
                        <arg>${jrd.jdk.arg4}</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.4.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>${jrd.client.main.class}</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.12.0</version>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.7.1</version>
                <executions>
                    <execution>
                        <phase>install</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                            <archive>
                                <manifest>
                                    <mainClass>${jrd.client.main.class}</mainClass>
                                </manifest>
                            </archive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- For tests -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.5.4</version>
                <configuration>
                    <argLine>
                        -Djrd.location=${project.parent.basedir}
                        --add-exports jdk.jdeps/com.sun.tools.javap=ALL-UNNAMED
                    </argLine>
                </configuration>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/plugins</directory>
                <targetPath>plugins</targetPath>
                <includes>
                    <include>**/*.java</include>
                </includes>
            </resource>
            <resource>
                <directory>src/plugins</directory>
                <targetPath>plugins</targetPath>
                <includes>
                    <include>**/*.json</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/*.prop</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.prop</include>
                </includes>
            </resource>
            <resource>
                <directory>${jrd.root.directory}</directory>
                <includes>
                    <include>LICENSE</include>
                </includes>
            </resource>
        </resources>
    </build>
    <dependencies>
        <dependency>
            <groupId>io.github.mkoncek</groupId>
            <artifactId>classpathless-compiler-api</artifactId>
            <version>${cplc.version}</version>
        </dependency>
        <dependency>
            <groupId>io.github.mkoncek</groupId>
            <artifactId>classpathless-compiler-util</artifactId>
            <version>${cplc.version}</version>
        </dependency>
        <dependency>
            <groupId>io.github.mkoncek</groupId>
            <artifactId>classpathless-compiler</artifactId>
            <version>${cplc.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.13.2</version>
        </dependency>
        <dependency>
            <groupId>io.github.java-diff-utils</groupId>
            <artifactId>java-diff-utils</artifactId>
            <version>4.16</version>
        </dependency>
        <dependency>
            <groupId>com.fifesoft</groupId>
            <artifactId>rsyntaxtextarea</artifactId>
            <version>3.6.0</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.byteman</groupId>
            <artifactId>byteman-install</artifactId>
            <version>${btm.version}</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.jboss.byteman</groupId>
            <artifactId>byteman</artifactId>
            <version>${btm.version}</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.jboss.byteman</groupId>
            <artifactId>byteman-submit</artifactId>
            <version>${btm.version}</version>
            <type>jar</type>
        </dependency>

        <!-- For tests -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${jupiter.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>downloadPlugins</id>

            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <dependencies>
                <!-- procyon 0.6 was not yet released
                use git clone  git@github.com:mstrobel/procyon.git
                JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk ./gradlew  install
                to push it to local repos.
                Procyon needs besut.jcommander. For built image, it workws without, but otherwise may be missing
                -->
                <dependency>
                    <groupId>com.github.mstrobel</groupId>
                    <artifactId>procyon-decompiler</artifactId>
                    <version>1.0-SNAPSHOT</version>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>com.github.mstrobel</groupId>
                    <artifactId>procyon-core</artifactId>
                    <version>1.0-SNAPSHOT</version>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>com.github.mstrobel</groupId>
                    <artifactId>procyon-compilertools</artifactId>
                    <version>1.0-SNAPSHOT</version>
                    <scope>provided</scope>
                </dependency>
                <!--
                jcommander is needed only by procyon, and procyon seems to be dead
                udpate of jcomander means udpate of procyon or local patching.
                Not hard, but probably useless
                -->
                <dependency>
                    <groupId>com.beust</groupId>
                    <artifactId>jcommander</artifactId>
                    <version>1.78</version>
                </dependency>

                <dependency>
                    <groupId>org.jboss.windup.decompiler</groupId>
                    <artifactId>decompiler-fernflower</artifactId>
                    <version>6.3.9.Final</version>
                    <scope>provided</scope>
                </dependency>

                <!--
                Asm tools are very often outdated in maven
                git clone https://github.com/openjdk/asmtools, checkout  waht version is needed
                cd maven/ ;  sh mvngen.sh  ;  mvn clean install
                -->
                <dependency>
                    <groupId>org.openjdk</groupId>
                    <artifactId>asmtools</artifactId>
                    <version>9.0.b12-ea</version>
                    <scope>provided</scope>
                </dependency>

                <dependency>
                    <groupId>org.openjdk.asmtools</groupId>
                    <artifactId>asmtools-core</artifactId>
                    <version>7.0.b10-ea</version>
                    <scope>provided</scope>
                </dependency>

                <dependency>
                    <groupId>org.benf</groupId>
                    <artifactId>cfr</artifactId>
                    <version>0.152</version>
                    <scope>provided</scope>
                </dependency>

                <!--bintray repos seems to die
                use git clone  https://github.com/java-decompiler/jd-core  ; git checkout v1.1.3  (do  not work with main)
                and built by direct javac:(
                rm -rf build ; mkdir build
                /usr/lib/jvm/java-1.8.0-openjdk/bin/javac -g `find src/main/java/   -type f ` -d build
                rm -rf  ~/.m2/repository/org/jd/jd-core/1.1.3/
                mkdir -p  ~/.m2/repository/org/jd/jd-core/1.1.3/
                /usr/lib/jvm/java-21-openjdk/bin/jar -cf  ~/.m2/repository/org/jd/jd-core/1.1.3/jd-core-1.1.3.jar -C build org
                -->
                <dependency>
                    <groupId>org.jd</groupId>
                    <artifactId>jd-core</artifactId>
                    <version>1.1.3</version>
                    <scope>provided</scope>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>legacy</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <jrd.jdk.version>8</jrd.jdk.version>
                <jrd.jdk.arg1></jrd.jdk.arg1>
                <jrd.jdk.arg2></jrd.jdk.arg2>
                <jrd.jdk.arg3></jrd.jdk.arg3>
                <jrd.jdk.arg4></jrd.jdk.arg4>
            </properties>
            <dependencies>
<!--for jdk8 we needs tools.jar, for jdk11 we must not hav it,
    surprisingly, by not having it declared, makes it work for both jdk8 and jdk11 -->
<!--                <dependency>
                    <groupId>com.sun</groupId>
                    <artifactId>tools</artifactId>
                    <version>1.7.0</version>
                    <scope>system</scope>
                    <systemPath>${java.home}/../lib/tools.jar</systemPath>
                </dependency>-->
            </dependencies>
        </profile>
    </profiles>
</project>
